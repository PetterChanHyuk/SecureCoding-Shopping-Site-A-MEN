{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      itemName: '',\n      selectedCategoryId: '',\n      newCategory: '',\n      itemDescription: '',\n      file: null,\n      categories: []\n    };\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_BACKEND_URL}/categories`);\n        this.categories = response.data;\n      } catch (err) {\n        console.error('Failed to fetch categories:', err);\n      }\n    },\n    onFileChange(event) {\n      this.file = event.target.files[0];\n    },\n    async addCategory() {\n      if (!this.newCategory) return;\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/categories`, {\n          name: this.newCategory\n        });\n        this.categories.push(response.data);\n        this.newCategory = '';\n      } catch (err) {\n        console.error('Failed to add category:', err);\n      }\n    },\n    async addItem() {\n      const userId = localStorage.getItem('userId'); // 사용자 ID 가져오기\n\n      if (!this.itemName || !this.selectedCategoryId || !userId) {\n        alert('Please fill in all required fields');\n        return;\n      }\n      let imageUrl = '';\n      if (this.file) {\n        const formData = new FormData();\n        formData.append('file', this.file);\n        try {\n          const uploadResponse = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/upload`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          imageUrl = uploadResponse.data.filePath;\n        } catch (err) {\n          console.error('File upload failed:', err);\n        }\n      }\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/items`, {\n          name: this.itemName,\n          categoryId: this.selectedCategoryId,\n          imageUrl,\n          description: this.itemDescription,\n          userId // 사용자 ID 추가\n        });\n        console.log('Item added successfully:', response.data);\n        this.$router.push('/mainpage');\n      } catch (err) {\n        console.error('Failed to add item:', err);\n        if (err.response && err.response.data) {\n          console.error('Error details:', err.response.data);\n        }\n      }\n    }\n  },\n  created() {\n    this.fetchCategories();\n  }\n};","map":{"version":3,"names":["axios","data","itemName","selectedCategoryId","newCategory","itemDescription","file","categories","methods","fetchCategories","response","get","process","env","VUE_APP_BACKEND_URL","err","console","error","onFileChange","event","target","files","addCategory","post","name","push","addItem","userId","localStorage","getItem","alert","imageUrl","formData","FormData","append","uploadResponse","headers","filePath","categoryId","description","log","$router","created"],"sources":["D:\\SecureCoding-Shopping-Site-A-MEN\\my-diary-app\\client\\src\\components\\AddItem.vue"],"sourcesContent":["<template>\r\n    <div class=\"add-item-container\">\r\n      <h1>새로운 아이템 추가</h1>\r\n      <form @submit.prevent=\"addItem\">\r\n        <div>\r\n          <label for=\"itemName\">Item Name</label>\r\n          <input type=\"text\" id=\"itemName\" v-model=\"itemName\" required />\r\n        </div>\r\n        <div>\r\n          <label for=\"category\">Category</label>\r\n          <select id=\"category\" v-model=\"selectedCategoryId\" required>\r\n            <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\r\n              {{ category.name }}\r\n            </option>\r\n          </select>\r\n          <input type=\"text\" v-model=\"newCategory\" placeholder=\"Add new category\" />\r\n          <button type=\"button\" @click=\"addCategory\">Add Category</button>\r\n        </div>\r\n        <div>\r\n          <label for=\"itemDescription\">Item Description</label>\r\n          <textarea id=\"itemDescription\" v-model=\"itemDescription\"></textarea>\r\n        </div>\r\n        <div>\r\n          <label for=\"file\">Image</label>\r\n          <input type=\"file\" id=\"file\" @change=\"onFileChange\" />\r\n        </div>\r\n        <button type=\"submit\">추가</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        itemName: '',\r\n        selectedCategoryId: '',\r\n        newCategory: '',\r\n        itemDescription: '',\r\n        file: null,\r\n        categories: []\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchCategories() {\r\n        try {\r\n          const response = await axios.get(`${process.env.VUE_APP_BACKEND_URL}/categories`);\r\n          this.categories = response.data;\r\n        } catch (err) {\r\n          console.error('Failed to fetch categories:', err);\r\n        }\r\n      },\r\n      onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n      },\r\n      async addCategory() {\r\n        if (!this.newCategory) return;\r\n  \r\n        try {\r\n          const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/categories`, {\r\n            name: this.newCategory\r\n          });\r\n          this.categories.push(response.data);\r\n          this.newCategory = '';\r\n        } catch (err) {\r\n          console.error('Failed to add category:', err);\r\n        }\r\n      },\r\n      async addItem() {\r\n        const userId = localStorage.getItem('userId'); // 사용자 ID 가져오기\r\n  \r\n        if (!this.itemName || !this.selectedCategoryId || !userId) {\r\n          alert('Please fill in all required fields');\r\n          return;\r\n        }\r\n  \r\n        let imageUrl = '';\r\n        if (this.file) {\r\n          const formData = new FormData();\r\n          formData.append('file', this.file);\r\n  \r\n          try {\r\n            const uploadResponse = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/upload`, formData, {\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n            });\r\n            imageUrl = uploadResponse.data.filePath;\r\n          } catch (err) {\r\n            console.error('File upload failed:', err);\r\n          }\r\n        }\r\n  \r\n        try {\r\n          const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/items`, {\r\n            name: this.itemName,\r\n            categoryId: this.selectedCategoryId,\r\n            imageUrl,\r\n            description: this.itemDescription,\r\n            userId // 사용자 ID 추가\r\n          });\r\n          console.log('Item added successfully:', response.data);\r\n          this.$router.push('/mainpage');\r\n        } catch (err) {\r\n          console.error('Failed to add item:', err);\r\n          if (err.response && err.response.data) {\r\n            console.error('Error details:', err.response.data);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchCategories();\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .add-item-container {\r\n    width: 300px;\r\n    margin: auto;\r\n    padding: 20px;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n  }\r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}