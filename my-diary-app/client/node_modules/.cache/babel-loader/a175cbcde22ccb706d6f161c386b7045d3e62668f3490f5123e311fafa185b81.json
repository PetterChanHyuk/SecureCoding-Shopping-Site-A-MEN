{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"add-item-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"새로운 아이템 추가\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"itemName\"\n}, \"Item Name\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"category\"\n}, \"Category\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"custom-select-container\"\n};\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"itemDescription\"\n}, \"Item Description\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"file\"\n}, \"Image\", -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"추가\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers((...args) => $options.addItem && $options.addItem(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"itemName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.itemName = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.validateItemName && $options.validateItemName(...args)),\n    required: \"\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.itemName]]), $data.itemNameError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.itemNameError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"select\", {\n    id: \"category\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedCategoryId = $event),\n    required: \"\",\n    size: \"1\",\n    class: \"category-select\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: category.id,\n      value: category.id\n    }, _toDisplayString(category.name), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedCategoryId]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newCategory = $event),\n    onInput: _cache[4] || (_cache[4] = (...args) => $options.validateNewCategory && $options.validateNewCategory(...args)),\n    placeholder: \"Add new category\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.newCategory]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.addCategory && $options.addCategory(...args)),\n    disabled: $data.newCategoryError || !$data.newCategory\n  }, \"Add Category\", 8 /* PROPS */, _hoisted_8)]), $data.newCategoryError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, _toDisplayString($data.newCategoryError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_hoisted_10, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"itemDescription\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.itemDescription = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.itemDescription]])]), _createElementVNode(\"div\", null, [_hoisted_11, _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    onChange: _cache[7] || (_cache[7] = (...args) => $options.onFileChange && $options.onFileChange(...args))\n  }, null, 32 /* NEED_HYDRATION */)]), _hoisted_12], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","key","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","addItem","_hoisted_3","id","$event","$data","itemName","onInput","validateItemName","required","itemNameError","_hoisted_4","_toDisplayString","_createCommentVNode","_hoisted_5","_hoisted_6","selectedCategoryId","size","_Fragment","_renderList","categories","category","value","name","_hoisted_7","newCategory","validateNewCategory","placeholder","onClick","addCategory","disabled","newCategoryError","_hoisted_8","_hoisted_9","_hoisted_10","itemDescription","_hoisted_11","onChange","onFileChange","_hoisted_12"],"sources":["C:\\Users\\cba64\\Coding\\SecureCoding-Shopping-Site-A-MEN\\my-diary-app\\client\\src\\components\\AddItem.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-item-container\">\r\n    <h1>새로운 아이템 추가</h1>\r\n    <form @submit.prevent=\"addItem\">\r\n      <div>\r\n        <label for=\"itemName\">Item Name</label>\r\n        <input type=\"text\" id=\"itemName\" v-model=\"itemName\" @input=\"validateItemName\" required />\r\n        <p v-if=\"itemNameError\" class=\"error-message\">{{ itemNameError }}</p>\r\n      </div>\r\n      <div>\r\n        <label for=\"category\">Category</label>\r\n        <div class=\"custom-select-container\">\r\n          <select id=\"category\" v-model=\"selectedCategoryId\" required size=\"1\" class=\"category-select\">\r\n            <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\r\n              {{ category.name }}\r\n            </option>\r\n          </select>\r\n          <input type=\"text\" v-model=\"newCategory\" @input=\"validateNewCategory\" placeholder=\"Add new category\" />\r\n          <button type=\"button\" @click=\"addCategory\" :disabled=\"newCategoryError || !newCategory\">Add Category</button>\r\n        </div>\r\n        <p v-if=\"newCategoryError\" class=\"error-message\">{{ newCategoryError }}</p>\r\n      </div>\r\n      <div>\r\n        <label for=\"itemDescription\">Item Description</label>\r\n        <textarea id=\"itemDescription\" v-model=\"itemDescription\"></textarea>\r\n      </div>\r\n      <div>\r\n        <label for=\"file\">Image</label>\r\n        <input type=\"file\" id=\"file\" @change=\"onFileChange\" />\r\n      </div>\r\n      <button type=\"submit\">추가</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      itemName: '',\r\n      selectedCategoryId: '',\r\n      newCategory: '',\r\n      itemDescription: '',\r\n      file: null,\r\n      categories: [],\r\n      itemNameError: '',\r\n      newCategoryError: ''\r\n    };\r\n  },\r\n  methods: {\r\n    validateItemName() {\r\n      const regex = /^[a-zA-Z0-9가-힣\\s]+$/;\r\n      if (!regex.test(this.itemName)) {\r\n        this.itemNameError = '특수문자는 사용할 수 없습니다.';\r\n      } else {\r\n        this.itemNameError = '';\r\n      }\r\n    },\r\n    validateNewCategory() {\r\n      const regex = /^[a-zA-Z0-9가-힣\\s]+$/;\r\n      if (!regex.test(this.newCategory)) {\r\n        this.newCategoryError = '특수문자는 사용할 수 없습니다.';\r\n      } else {\r\n        this.newCategoryError = '';\r\n      }\r\n    },\r\n    async fetchCategories() {\r\n      try {\r\n        const response = await axios.get(`${process.env.VUE_APP_BACKEND_URL}/categories`);\r\n        this.categories = response.data;\r\n      } catch (err) {\r\n        console.error('카테고리 목록을 불러오는 데 실패했습니다:', err);\r\n      }\r\n    },\r\n    onFileChange(event) {\r\n      const file = event.target.files[0];\r\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif'];\r\n      const maxSize = 2 * 1024 * 1024; // 2MB\r\n\r\n      if (!validTypes.includes(file.type)) {\r\n        alert('유효하지 않은 파일 형식입니다. 이미지 파일을 업로드하세요.');\r\n        return;\r\n      }\r\n\r\n      if (file.size > maxSize) {\r\n        alert('파일 크기가 2MB를 초과합니다. 더 작은 파일을 업로드하세요.');\r\n        return;\r\n      }\r\n\r\n      this.file = file;\r\n    },\r\n    async addCategory() {\r\n      if (!this.newCategory || this.newCategoryError) {\r\n        alert('유효한 카테고리 이름을 입력해 주세요.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/categories`, {\r\n          name: this.newCategory\r\n        });\r\n        this.categories.push(response.data);\r\n        this.newCategory = '';\r\n      } catch (err) {\r\n        console.error('카테고리 추가에 실패했습니다:', err);\r\n      }\r\n    },\r\n    async addItem() {\r\n      const userId = localStorage.getItem('userId'); // 사용자 ID 가져오기\r\n\r\n      if (!this.itemName || !this.selectedCategoryId || !userId || this.itemNameError) {\r\n        alert('모든 필수 항목을 올바르게 입력해 주세요.');\r\n        return;\r\n      }\r\n\r\n      let imageUrl = '';\r\n      if (this.file) {\r\n        const formData = new FormData();\r\n        formData.append('file', this.file);\r\n\r\n        try {\r\n          const uploadResponse = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/upload`, formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          });\r\n          imageUrl = uploadResponse.data.filePath;\r\n        } catch (err) {\r\n          console.error('파일 업로드에 실패했습니다:', err);\r\n          alert('파일 업로드에 실패했습니다.');\r\n          return;\r\n        }\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/items`, {\r\n          name: this.itemName,\r\n          categoryId: this.selectedCategoryId,\r\n          imageUrl,\r\n          description: this.itemDescription,\r\n          userId // 사용자 ID 추가\r\n        });\r\n        console.log('아이템 추가에 성공했습니다:', response.data);\r\n        this.$router.push('/mainpage');\r\n      } catch (err) {\r\n        console.error('아이템 추가에 실패했습니다:', err);\r\n        alert('아이템 추가에 실패했습니다.');\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchCategories();\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.add-item-container {\r\n  width: 300px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.custom-select-container {\r\n  position: relative;\r\n  display: flex;\r\n}\r\n\r\n.category-select {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.custom-select-container input[type=\"text\"] {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.custom-select-container button {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.custom-select-container::after {\r\n  content: '▼';\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 10px;\r\n  transform: translateY(-50%);\r\n  pointer-events: none;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  font-size: 0.9em;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}