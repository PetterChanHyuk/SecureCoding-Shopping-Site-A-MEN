{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"timer\"\n};\nconst _hoisted_3 = {\n  class: \"user-info\"\n};\nconst _hoisted_4 = {\n  class: \"category-container\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"item-container\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"item-details\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", null, [_createElementVNode(\"h1\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.refreshPage && $options.refreshPage(...args))\n  }, \"108번가\"), _createElementVNode(\"div\", _hoisted_2, \"자동 로그아웃: \" + _toDisplayString($data.remainingTime) + \"초\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createTextVNode(_toDisplayString($data.userName) + \"님 | \", 1 /* TEXT */), _createVNode(_component_router_link, {\n    to: \"/mypage\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"마이페이지\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \"), _createVNode(_component_router_link, {\n    to: \"/cart\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"장바구니\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \"), _createVNode(_component_router_link, {\n    to: \"/orders\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"주문 목록\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.logout && $options.logout(...args))\n  }, \"로그아웃\")])]), _createElementVNode(\"main\", null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.searchQuery = $event),\n    placeholder: \"Search for items...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.search && $options.search(...args))\n  }, \"검색\")]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    class: _normalizeClass({\n      'active': $data.selectedCategory === null\n    }),\n    onClick: _cache[4] || (_cache[4] = $event => $options.filterByCategory(null))\n  }, \" 전체 \", 2 /* CLASS */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: category.id,\n      onClick: $event => $options.filterByCategory(category),\n      class: _normalizeClass({\n        'active': $data.selectedCategory === category\n      })\n    }, _toDisplayString(category.name), 11 /* TEXT, CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"item\"\n    }, [_createElementVNode(\"img\", {\n      src: $options.getImageUrl(item.image_url),\n      alt: \"Item Image\",\n      class: \"item-image\"\n    }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"h3\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(item.description), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.addToCart(item.id)\n    }, \"장바구니에 추가\", 8 /* PROPS */, _hoisted_9), _createElementVNode(\"button\", {\n      onClick: $event => $options.buyNow(item.id)\n    }, \"바로 구매\", 8 /* PROPS */, _hoisted_10)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","refreshPage","_hoisted_2","_toDisplayString","$data","remainingTime","_hoisted_3","_createTextVNode","userName","_createVNode","_component_router_link","to","default","_withCtx","_","href","logout","type","$event","searchQuery","placeholder","search","_hoisted_4","_normalizeClass","selectedCategory","filterByCategory","_Fragment","_renderList","categories","category","key","name","_hoisted_5","_hoisted_6","filteredItems","item","src","getImageUrl","image_url","alt","_hoisted_7","_hoisted_8","description","addToCart","_hoisted_9","buyNow","_hoisted_10"],"sources":["D:\\SecureCoding-Shopping-Site-A-MEN\\my-diary-app\\client\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header>\r\n      <h1 @click=\"refreshPage\">108번가</h1>\r\n      <div class=\"timer\">자동 로그아웃: {{ remainingTime }}초</div>\r\n      <div class=\"user-info\">\r\n        {{ userName }}님 | \r\n        <router-link to=\"/mypage\">마이페이지</router-link> |\r\n        <router-link to=\"/cart\">장바구니</router-link> |\r\n        <router-link to=\"/orders\">주문 목록</router-link> |\r\n        <a href=\"#\" @click=\"logout\">로그아웃</a>\r\n      </div>\r\n    </header>\r\n    <main>\r\n      <div>\r\n        <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Search for items...\" />\r\n        <button @click=\"search\">검색</button>\r\n      </div>\r\n      <div class=\"category-container\">\r\n        <button \r\n          :class=\"{'active': selectedCategory === null}\" \r\n          @click=\"filterByCategory(null)\">\r\n          전체\r\n        </button>\r\n        <button \r\n          v-for=\"category in categories\" \r\n          :key=\"category.id\" \r\n          @click=\"filterByCategory(category)\"\r\n          :class=\"{'active': selectedCategory === category}\">\r\n          {{ category.name }}\r\n        </button>\r\n      </div>\r\n      <div class=\"item-container\">\r\n        <div v-for=\"item in filteredItems\" :key=\"item.id\" class=\"item\">\r\n          <img :src=\"getImageUrl(item.image_url)\" alt=\"Item Image\" class=\"item-image\" />\r\n          <div class=\"item-details\">\r\n            <h3>{{ item.name }}</h3>\r\n            <p>{{ item.description }}</p>\r\n            <button @click=\"addToCart(item.id)\">장바구니에 추가</button>\r\n            <button @click=\"buyNow(item.id)\">바로 구매</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'MainPage',\r\n  data() {\r\n    return {\r\n      userName: '익명',\r\n      remainingTime: 600,\r\n      timer: null,\r\n      searchQuery: '',\r\n      filteredQuery: '',\r\n      selectedCategory: null,\r\n      categories: [],\r\n      items: []\r\n    };\r\n  },\r\n  computed: {\r\n    filteredItems() {\r\n      return this.items.filter(item => {\r\n        const matchesQuery = item.name.toLowerCase().includes(this.filteredQuery.toLowerCase());\r\n        const matchesCategory = this.selectedCategory ? item.category_id === this.selectedCategory.id : true;\r\n        return matchesQuery && matchesCategory;\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    escapeHtml(text) {\r\n      return text.replace(/[&<>\"'`=]/g, function (s) {\r\n        return {\r\n          '&': '&amp;',\r\n          '<': '&lt;',\r\n          '>': '&gt;',\r\n          '\"': '&quot;',\r\n          \"'\": '&#39;',\r\n          '`': '&#x60;',\r\n          '=': '&#x3D;'\r\n        }[s];\r\n      });\r\n    },\r\n    getImageUrl(imageUrl) {\r\n      return `${process.env.VUE_APP_BACKEND_URL}/${imageUrl}`;\r\n    },\r\n    search() {\r\n      const validatedQuery = this.validateSearchQuery(this.searchQuery);\r\n      if (!validatedQuery) {\r\n        alert('Invalid search query. Please enter alphanumeric characters only.');\r\n        return;\r\n      }\r\n\r\n      this.filteredQuery = validatedQuery;\r\n      this.fetchItems();\r\n    },\r\n    validateSearchQuery(query) {\r\n      const regex = /^[a-zA-Z0-9 ]*$/;\r\n      if (!regex.test(query)) {\r\n        return false;\r\n      }\r\n      // SQL 인젝션을 방지하기 위해 입력 값에 대해 이스케이핑 수행\r\n      const escapedQuery = this.escapeHtml(query);\r\n\r\n      // 이스케이핑된 검색어 반환\r\n      return escapedQuery;\r\n    },\r\n    refreshPage() {\r\n      window.location.reload();\r\n    },\r\n    filterByCategory(category) {\r\n      this.selectedCategory = category;\r\n      this.fetchItems();\r\n    },\r\n    resetTimer() {\r\n      this.remainingTime = 600;\r\n    },\r\n    updateTimer() {\r\n      if (this.remainingTime > 0) {\r\n        this.remainingTime--;\r\n      } else {\r\n        this.logout();\r\n      }\r\n    },\r\n    logout() {\r\n      clearInterval(this.timer);\r\n      const userId = localStorage.getItem('userId');\r\n      if (userId) {\r\n        axios.post(`${process.env.VUE_APP_BACKEND_URL}/userlogout`, { userId })\r\n          .then(() => {\r\n            localStorage.removeItem('userId');\r\n            this.$router.push('/userlogin');\r\n          })\r\n          .catch(error => {\r\n            console.error('로그아웃 실패:', error);\r\n          });\r\n      }\r\n    },\r\n    fetchUserName() {\r\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/username`, {\r\n          params: {\r\n          userId: localStorage.getItem('userId')\r\n          }\r\n      })\r\n      .then(response => {\r\n          this.userName = this.escapeHtml(response.data.name);\r\n      })\r\n      .catch(error => {\r\n          console.error('Error fetching user name:', error);\r\n      });\r\n    },\r\n    fetchCategories() {\r\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/categories`)\r\n        .then(response => {\r\n          this.categories = response.data.map(category => ({\r\n            ...category,\r\n            name: this.escapeHtml(category.name)\r\n          }));\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching categories:', error);\r\n        });\r\n    },\r\n    fetchItems() {\r\n      const params = {\r\n        searchQuery: this.searchQuery,\r\n        categoryId: this.selectedCategory ? this.selectedCategory.id : null\r\n      };\r\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/items`, { params })\r\n        .then(response => {\r\n          this.items = response.data.map(item => ({\r\n            ...item,\r\n            name: this.escapeHtml(item.name),\r\n            description: this.escapeHtml(item.description)\r\n          }));\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching items:', error);\r\n        });\r\n    },\r\n    addToCart(itemId) {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) {\r\n        alert('로그인이 필요합니다.');\r\n        this.$router.push('/userlogin');\r\n        return;\r\n      }\r\n      axios.post(`${process.env.VUE_APP_BACKEND_URL}/cart`, { userId, itemId, quantity: 1 })\r\n        .then(() => {\r\n          alert('장바구니에 추가되었습니다.');\r\n        })\r\n        .catch(error => {\r\n          console.error('Failed to add item to cart:', error);\r\n          alert('장바구니 추가에 실패했습니다.');\r\n        });\r\n    },\r\n    buyNow(itemId) {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) {\r\n        alert('로그인이 필요합니다.');\r\n        this.$router.push('/userlogin');\r\n        return;\r\n      }\r\n      axios.post(`${process.env.VUE_APP_BACKEND_URL}/orders`, { userId, itemId, quantity: 1 })\r\n        .then(() => {\r\n          alert('구매가 완료되었습니다.');\r\n        })\r\n        .catch(error => {\r\n          console.error('Failed to complete purchase:', error);\r\n          alert('구매에 실패했습니다.');\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchUserName();\r\n    this.fetchCategories();\r\n    this.fetchItems();\r\n\r\n    const userId = localStorage.getItem('userId');\r\n    if (!userId) {\r\n      alert(\"비정상적인 접근입니다.\");\r\n      this.$router.push('/userlogin');\r\n    }\r\n  },\r\n  mounted() {\r\n    this.timer = setInterval(this.updateTimer, 1000);\r\n\r\n    window.addEventListener('mousemove', this.resetTimer);\r\n    window.addEventListener('keydown', this.resetTimer);\r\n  },\r\n  beforeUnmount() {\r\n    clearInterval(this.timer);\r\n    window.removeEventListener('mousemove', this.resetTimer);\r\n    window.removeEventListener('keydown', this.resetTimer);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  font-family: Arial, sans-serif;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n#app {\r\n  text-align: center;\r\n}\r\nheader {\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\nh1 {\r\n  margin: 0;\r\n  cursor: pointer;\r\n}\r\nmain {\r\n  padding: 20px;\r\n}\r\ninput {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  margin-right: 10px;\r\n}\r\nbutton {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n}\r\nbutton.active {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n.category-container {\r\n  margin: 20px 0;\r\n}\r\n.item-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n.item {\r\n  background-color: #e9ecef;\r\n  margin: 10px;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  width: calc(25% - 20px);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.item-image {\r\n  width: 100px;\r\n  height: 100px;\r\n  object-fit: cover;\r\n}\r\n.item-details {\r\n  text-align: left;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}