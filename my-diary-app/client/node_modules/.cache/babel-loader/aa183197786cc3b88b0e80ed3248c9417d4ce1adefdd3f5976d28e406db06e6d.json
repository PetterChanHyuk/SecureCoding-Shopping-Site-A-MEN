{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect } from \"vue\";\nconst _hoisted_1 = {\n  class: \"add-item-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"새로운 아이템 추가\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newItemName = $event),\n    placeholder: \"Item Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newItemName]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newItemCategory = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: category.id,\n      value: category.id\n    }, _toDisplayString(category.name), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.newItemCategory]]), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.onFileChange && $options.onFileChange(...args))\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.addItem && $options.addItem(...args))\n  }, \"추가\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","type","_cache","$event","$data","newItemName","placeholder","newItemCategory","_Fragment","_renderList","categories","category","key","id","value","name","_hoisted_3","onChange","args","$options","onFileChange","onClick","addItem"],"sources":["D:\\SecureCoding-Shopping-Site-A-MEN\\my-diary-app\\client\\src\\components\\AddItem.vue"],"sourcesContent":["<template>\r\n    <div class=\"add-item-page\">\r\n      <h2>새로운 아이템 추가</h2>\r\n      <input type=\"text\" v-model=\"newItemName\" placeholder=\"Item Name\" />\r\n      <select v-model=\"newItemCategory\">\r\n        <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\r\n          {{ category.name }}\r\n        </option>\r\n      </select>\r\n      <input type=\"file\" @change=\"onFileChange\" />\r\n      <button @click=\"addItem\">추가</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'AddItem',\r\n    data() {\r\n      return {\r\n        newItemName: '', // 새로운 아이템의 이름\r\n        newItemCategory: null, // 새로운 아이템의 카테고리\r\n        categories: [],\r\n        selectedFile: null, // 선택된 파일\r\n        imageUrl: '' // 업로드된 이미지의 URL\r\n      };\r\n    },\r\n    methods: {\r\n      onFileChange(event) {\r\n        this.selectedFile = event.target.files[0];\r\n      },\r\n      async uploadFile() {\r\n        if (!this.selectedFile) return '';\r\n  \r\n        const formData = new FormData();\r\n        formData.append('file', this.selectedFile);\r\n  \r\n        try {\r\n          const response = await axios.post(`${process.env.VUE_APP_BACKEND_URL}/upload`, formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          });\r\n          return response.data.filePath;\r\n        } catch (error) {\r\n          console.error('파일 업로드 실패:', error);\r\n          return '';\r\n        }\r\n      },\r\n      async addItem() {\r\n        if (!this.newItemName || !this.newItemCategory) {\r\n          alert('아이템 이름과 카테고리를 선택해주세요.');\r\n          return;\r\n        }\r\n  \r\n        const imageUrl = await this.uploadFile();\r\n  \r\n        const newItem = {\r\n          name: this.newItemName,\r\n          categoryId: this.newItemCategory,\r\n          imageUrl\r\n        };\r\n  \r\n        axios.post(`${process.env.VUE_APP_BACKEND_URL}/items`, newItem)\r\n          .then(() => {\r\n            alert('아이템이 성공적으로 추가되었습니다.');\r\n            this.newItemName = '';\r\n            this.newItemCategory = null;\r\n            this.selectedFile = null;\r\n            this.imageUrl = '';\r\n          })\r\n          .catch(error => {\r\n            console.error('아이템 추가 실패:', error);\r\n          });\r\n      },\r\n      fetchCategories() {\r\n        axios.get(`${process.env.VUE_APP_BACKEND_URL}/categories`)\r\n          .then(response => {\r\n            this.categories = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching categories:', error);\r\n          });\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchCategories(); // 컴포넌트 생성 시 카테고리 조회\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .add-item-page {\r\n    margin-top: 20px;\r\n    padding: 20px;\r\n    border: 1px solid #ddd;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .add-item-page input,\r\n  .add-item-page select {\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    margin-bottom: 10px;\r\n  }\r\n  .add-item-page button {\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAe;gCACxBC,mBAAA,CAAmB,YAAf,YAAU;mBAFpB;;uBACIC,mBAAA,CAUM,OAVNC,UAUM,GATJC,UAAmB,E,gBACnBH,mBAAA,CAAmE;IAA5DI,IAAI,EAAC,MAAM;IAHxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGkCC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAzBF,KAAA,CAAAC,WAAW,E,mBACvCR,mBAAA,CAIS;IARf,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIuBC,KAAA,CAAAG,eAAe,GAAAJ,MAAA;yBAC9BL,mBAAA,CAESU,SAAA,QAPjBC,WAAA,CAKmCL,KAAA,CAAAM,UAAU,EAAtBC,QAAQ;yBAAvBb,mBAAA,CAES;MAF+Bc,GAAG,EAAED,QAAQ,CAACE,EAAE;MAAGC,KAAK,EAAEH,QAAQ,CAACE;wBACtEF,QAAQ,CAACI,IAAI,wBAN1BC,UAAA;2EAIuBZ,KAAA,CAAAG,eAAe,E,GAKhCV,mBAAA,CAA4C;IAArCI,IAAI,EAAC,MAAM;IAAEgB,QAAM,EAAAf,MAAA,QAAAA,MAAA,UAAAgB,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;qCACxCrB,mBAAA,CAAoC;IAA3BwB,OAAK,EAAAnB,MAAA,QAAAA,MAAA,UAAAgB,IAAA,KAAEC,QAAA,CAAAG,OAAA,IAAAH,QAAA,CAAAG,OAAA,IAAAJ,IAAA,CAAO;KAAE,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}