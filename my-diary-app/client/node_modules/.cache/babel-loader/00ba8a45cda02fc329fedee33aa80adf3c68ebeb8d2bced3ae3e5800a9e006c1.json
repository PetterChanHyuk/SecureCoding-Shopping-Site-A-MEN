{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'MainPage',\n  data() {\n    return {\n      userName: '익명',\n      remainingTime: 600,\n      // 초단위 (10분)\n      timer: null,\n      searchQuery: '',\n      // 입력 필드의 값을 저장\n      filteredQuery: '',\n      // 실제로 필터링에 사용되는 값을 저장\n      selectedCategory: null,\n      // 선택된 카테고리를 저장\n      categories: [],\n      items: [],\n      newItemName: '',\n      // 새로운 아이템의 이름\n      newItemCategory: null // 새로운 아이템의 카테고리\n    };\n  },\n  computed: {\n    filteredItems() {\n      return this.items.filter(item => {\n        const matchesQuery = item.name.toLowerCase().includes(this.filteredQuery.toLowerCase());\n        const matchesCategory = this.selectedCategory ? item.category_id === this.selectedCategory.id : true;\n        return matchesQuery && matchesCategory;\n      });\n    }\n  },\n  methods: {\n    login() {\n      alert('로그인 버튼 클릭!');\n    },\n    search() {\n      this.filteredQuery = this.searchQuery; // 검색 버튼 클릭 시 filteredQuery 업데이트\n      this.fetchItems();\n    },\n    refreshPage() {\n      window.location.reload(); // 페이지 새로고침\n    },\n    filterByCategory(category) {\n      this.selectedCategory = category;\n      this.fetchItems();\n    },\n    resetTimer() {\n      this.remainingTime = 600; // 타이머를 10분으로 재설정\n    },\n    updateTimer() {\n      if (this.remainingTime > 0) {\n        this.remainingTime--;\n      } else {\n        this.logout(); // 타이머가 0이 되면 로그아웃 실행\n      }\n    },\n    logout() {\n      clearInterval(this.timerId); // 타이머 초기화\n      const userId = localStorage.getItem('userId');\n      if (userId) {\n        axios.post(`${process.env.VUE_APP_BACKEND_URL}/userlogout`, {\n          userId\n        }).then(() => {\n          localStorage.removeItem('userId');\n          this.$router.push('/userlogin'); // 로그인 페이지로 리디렉션\n        }).catch(error => {\n          console.error('로그아웃 실패:', error);\n        });\n      }\n    },\n    fetchUserName() {\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/username`, {\n        params: {\n          userId: localStorage.getItem('userId') // 사용자 ID 가져오기\n        }\n      }).then(response => {\n        this.userName = response.data.name; // 사용자 이름 설정\n      }).catch(error => {\n        console.error('Error fetching user name:', error);\n      });\n    },\n    fetchCategories() {\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/categories`).then(response => {\n        this.categories = response.data;\n      }).catch(error => {\n        console.error('Error fetching categories:', error);\n      });\n    },\n    fetchItems() {\n      const params = {\n        searchQuery: this.searchQuery,\n        categoryId: this.selectedCategory ? this.selectedCategory.id : null\n      };\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/items`, {\n        params\n      }).then(response => {\n        this.items = response.data;\n      }).catch(error => {\n        console.error('Error fetching items:', error);\n      });\n    },\n    addItem() {\n      if (!this.newItemName || !this.newItemCategory) {\n        alert('아이템 이름과 카테고리를 선택해주세요.');\n        return;\n      }\n      const newItem = {\n        name: this.newItemName,\n        categoryId: this.newItemCategory\n      };\n      axios.post(`${process.env.VUE_APP_BACKEND_URL}/items`, newItem).then(response => {\n        alert('아이템이 성공적으로 추가되었습니다.');\n        this.newItemName = '';\n        this.newItemCategory = null;\n        this.fetchItems(); // 아이템 목록 갱신\n      }).catch(error => {\n        console.error('아이템 추가 실패:', error);\n      });\n    }\n  },\n  created() {\n    this.fetchUserName(); // 컴포넌트 생성 시 사용자 이름 조회\n    this.fetchCategories(); // 컴포넌트 생성 시 카테고리 조회\n    this.fetchItems(); // 컴포넌트 생성 시 아이템 조회\n\n    // 로컬 스토리지에서 사용자 ID 확인\n    const userId = localStorage.getItem('userId');\n\n    // 사용자 ID가 없으면 로그인 페이지로 리디렉션\n    if (!userId) {\n      alert(\"비정상적인 접근입니다.\");\n      this.$router.push('/userlogin');\n    }\n  },\n  mounted() {\n    this.timer = setInterval(this.updateTimer, 1000); // 1초마다 타이머 감소\n\n    // 사용자 활동 감지\n    window.addEventListener('mousemove', this.resetTimer);\n    window.addEventListener('keydown', this.resetTimer);\n  },\n  beforeUnmount() {\n    clearInterval(this.timer); // 컴포넌트가 제거되면 타이머 정리\n    window.removeEventListener('mousemove', this.resetTimer);\n    window.removeEventListener('keydown', this.resetTimer);\n  }\n};","map":{"version":3,"names":["axios","name","data","userName","remainingTime","timer","searchQuery","filteredQuery","selectedCategory","categories","items","newItemName","newItemCategory","computed","filteredItems","filter","item","matchesQuery","toLowerCase","includes","matchesCategory","category_id","id","methods","login","alert","search","fetchItems","refreshPage","window","location","reload","filterByCategory","category","resetTimer","updateTimer","logout","clearInterval","timerId","userId","localStorage","getItem","post","process","env","VUE_APP_BACKEND_URL","then","removeItem","$router","push","catch","error","console","fetchUserName","get","params","response","fetchCategories","categoryId","addItem","newItem","created","mounted","setInterval","addEventListener","beforeUnmount","removeEventListener"],"sources":["D:\\SecureCoding-Shopping-Site-A-MEN\\my-diary-app\\client\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header>\r\n      <h1 @click=\"refreshPage\">108번가</h1> <!-- 클릭 이벤트 추가 -->\r\n      <div class=\"timer\">자동 로그아웃: {{ remainingTime }}초</div>\r\n      <div class=\"user-info\">\r\n        {{ userName }}님 | \r\n        <router-link to=\"/mypage\">마이페이지</router-link> |\r\n        <a href=\"#\" @click=\"logout\">로그아웃</a>\r\n      </div>\r\n      <button @click=\"login\">로그인</button>\r\n    </header>\r\n    <main>\r\n      <div>\r\n        <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Search for items...\" />\r\n        <button @click=\"search\">검색</button>\r\n      </div>\r\n      <div class=\"category-container\">\r\n        <button \r\n          :class=\"{'active': selectedCategory === null}\" \r\n          @click=\"filterByCategory(null)\">\r\n          전체\r\n        </button>\r\n        <button \r\n          v-for=\"category in categories\" \r\n          :key=\"category.id\" \r\n          @click=\"filterByCategory(category)\"\r\n          :class=\"{'active': selectedCategory === category}\">\r\n          {{ category.name }}\r\n        </button>\r\n      </div>\r\n      <div class=\"item-container\">\r\n        <div v-for=\"item in filteredItems\" :key=\"item.id\" class=\"item\">\r\n          <div class=\"item-content\">{{ item.name }}</div>\r\n        </div>\r\n      </div>\r\n      <!-- 새로운 아이템 추가 폼 -->\r\n      <div class=\"add-item-form\">\r\n        <h2>새로운 아이템 추가</h2>\r\n        <input type=\"text\" v-model=\"newItemName\" placeholder=\"Item Name\" />\r\n        <select v-model=\"newItemCategory\">\r\n          <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\r\n            {{ category.name }}\r\n          </option>\r\n        </select>\r\n        <button @click=\"addItem\">추가</button>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'MainPage',\r\n  data() {\r\n    return {\r\n      userName: '익명',\r\n      remainingTime: 600, // 초단위 (10분)\r\n      timer: null,\r\n      searchQuery: '', // 입력 필드의 값을 저장\r\n      filteredQuery: '', // 실제로 필터링에 사용되는 값을 저장\r\n      selectedCategory: null, // 선택된 카테고리를 저장\r\n      categories: [],\r\n      items: [],\r\n      newItemName: '', // 새로운 아이템의 이름\r\n      newItemCategory: null // 새로운 아이템의 카테고리\r\n    };\r\n  },\r\n  computed: {\r\n    filteredItems() {\r\n      return this.items.filter(item => {\r\n        const matchesQuery = item.name.toLowerCase().includes(this.filteredQuery.toLowerCase());\r\n        const matchesCategory = this.selectedCategory ? item.category_id === this.selectedCategory.id : true;\r\n        return matchesQuery && matchesCategory;\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      alert('로그인 버튼 클릭!');\r\n    },\r\n    search() {\r\n      this.filteredQuery = this.searchQuery; // 검색 버튼 클릭 시 filteredQuery 업데이트\r\n      this.fetchItems();\r\n    },\r\n    refreshPage() {\r\n      window.location.reload(); // 페이지 새로고침\r\n    },\r\n    filterByCategory(category) {\r\n      this.selectedCategory = category;\r\n      this.fetchItems();\r\n    },\r\n    resetTimer() {\r\n      this.remainingTime = 600; // 타이머를 10분으로 재설정\r\n    },\r\n    updateTimer() {\r\n      if (this.remainingTime > 0) {\r\n        this.remainingTime--;\r\n      } else {\r\n        this.logout(); // 타이머가 0이 되면 로그아웃 실행\r\n      }\r\n    },\r\n    logout() {\r\n      clearInterval(this.timerId); // 타이머 초기화\r\n      const userId = localStorage.getItem('userId');\r\n      if (userId) {\r\n        axios.post(`${process.env.VUE_APP_BACKEND_URL}/userlogout`, { userId })\r\n          .then(() => {\r\n            localStorage.removeItem('userId');\r\n            this.$router.push('/userlogin'); // 로그인 페이지로 리디렉션\r\n          })\r\n          .catch(error => {\r\n            console.error('로그아웃 실패:', error);\r\n          });\r\n      }\r\n    },\r\n    fetchUserName() {\r\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/username`, {\r\n          params: {\r\n          userId: localStorage.getItem('userId') // 사용자 ID 가져오기\r\n          }\r\n      })\r\n      .then(response => {\r\n          this.userName = response.data.name; // 사용자 이름 설정\r\n      })\r\n      .catch(error => {\r\n          console.error('Error fetching user name:', error);\r\n      });\r\n    },\r\n    fetchCategories() {\r\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/categories`)\r\n        .then(response => {\r\n          this.categories = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching categories:', error);\r\n        });\r\n    },\r\n    fetchItems() {\r\n      const params = {\r\n        searchQuery: this.searchQuery,\r\n        categoryId: this.selectedCategory ? this.selectedCategory.id : null\r\n      };\r\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/items`, { params })\r\n        .then(response => {\r\n          this.items = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching items:', error);\r\n        });\r\n    },\r\n    addItem() {\r\n      if (!this.newItemName || !this.newItemCategory) {\r\n        alert('아이템 이름과 카테고리를 선택해주세요.');\r\n        return;\r\n      }\r\n      const newItem = {\r\n        name: this.newItemName,\r\n        categoryId: this.newItemCategory\r\n      };\r\n      axios.post(`${process.env.VUE_APP_BACKEND_URL}/items`, newItem)\r\n        .then(response => {\r\n          alert('아이템이 성공적으로 추가되었습니다.');\r\n          this.newItemName = '';\r\n          this.newItemCategory = null;\r\n          this.fetchItems(); // 아이템 목록 갱신\r\n        })\r\n        .catch(error => {\r\n          console.error('아이템 추가 실패:', error);\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchUserName(); // 컴포넌트 생성 시 사용자 이름 조회\r\n    this.fetchCategories(); // 컴포넌트 생성 시 카테고리 조회\r\n    this.fetchItems(); // 컴포넌트 생성 시 아이템 조회\r\n\r\n    // 로컬 스토리지에서 사용자 ID 확인\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    // 사용자 ID가 없으면 로그인 페이지로 리디렉션\r\n    if (!userId) {\r\n      alert(\"비정상적인 접근입니다.\");\r\n      this.$router.push('/userlogin');\r\n    }\r\n  },\r\n  mounted() {\r\n    this.timer = setInterval(this.updateTimer, 1000); // 1초마다 타이머 감소\r\n\r\n    // 사용자 활동 감지\r\n    window.addEventListener('mousemove', this.resetTimer);\r\n    window.addEventListener('keydown', this.resetTimer);\r\n  }, \r\n  beforeUnmount() {\r\n    clearInterval(this.timer); // 컴포넌트가 제거되면 타이머 정리\r\n    window.removeEventListener('mousemove', this.resetTimer);\r\n    window.removeEventListener('keydown', this.resetTimer);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* ... 기존 스타일 ... */\r\n\r\n.add-item-form {\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.add-item-form input,\r\n.add-item-form select {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n}\r\n.add-item-form button {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";AAoDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE,GAAG;MAAE;MACpBC,KAAK,EAAE,IAAI;MACXC,WAAW,EAAE,EAAE;MAAE;MACjBC,aAAa,EAAE,EAAE;MAAE;MACnBC,gBAAgB,EAAE,IAAI;MAAE;MACxBC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MAAE;MACjBC,eAAe,EAAE,IAAG,CAAE;IACxB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACJ,KAAK,CAACK,MAAM,CAACC,IAAG,IAAK;QAC/B,MAAMC,YAAW,GAAID,IAAI,CAACf,IAAI,CAACiB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACZ,aAAa,CAACW,WAAW,CAAC,CAAC,CAAC;QACvF,MAAME,eAAc,GAAI,IAAI,CAACZ,gBAAe,GAAIQ,IAAI,CAACK,WAAU,KAAM,IAAI,CAACb,gBAAgB,CAACc,EAAC,GAAI,IAAI;QACpG,OAAOL,YAAW,IAAKG,eAAe;MACxC,CAAC,CAAC;IACJ;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACNC,KAAK,CAAC,YAAY,CAAC;IACrB,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACnB,aAAY,GAAI,IAAI,CAACD,WAAW,EAAE;MACvC,IAAI,CAACqB,UAAU,CAAC,CAAC;IACnB,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;IAC5B,CAAC;IACDC,gBAAgBA,CAACC,QAAQ,EAAE;MACzB,IAAI,CAACzB,gBAAe,GAAIyB,QAAQ;MAChC,IAAI,CAACN,UAAU,CAAC,CAAC;IACnB,CAAC;IACDO,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC9B,aAAY,GAAI,GAAG,EAAE;IAC5B,CAAC;IACD+B,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAAC/B,aAAY,GAAI,CAAC,EAAE;QAC1B,IAAI,CAACA,aAAa,EAAE;MACtB,OAAO;QACL,IAAI,CAACgC,MAAM,CAAC,CAAC,EAAE;MACjB;IACF,CAAC;IACDA,MAAMA,CAAA,EAAG;MACPC,aAAa,CAAC,IAAI,CAACC,OAAO,CAAC,EAAE;MAC7B,MAAMC,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,IAAIF,MAAM,EAAE;QACVvC,KAAK,CAAC0C,IAAI,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,mBAAoB,aAAY,EAAE;UAAEN;QAAO,CAAC,EACnEO,IAAI,CAAC,MAAM;UACVN,YAAY,CAACO,UAAU,CAAC,QAAQ,CAAC;UACjC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC,EAAE;QACnC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;UACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;QAClC,CAAC,CAAC;MACN;IACF,CAAC;IACDE,aAAaA,CAAA,EAAG;MACdrD,KAAK,CAACsD,GAAG,CAAE,GAAEX,OAAO,CAACC,GAAG,CAACC,mBAAoB,WAAU,EAAE;QACrDU,MAAM,EAAE;UACRhB,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAE;QACvC;MACJ,CAAC,EACAK,IAAI,CAACU,QAAO,IAAK;QACd,IAAI,CAACrD,QAAO,GAAIqD,QAAQ,CAACtD,IAAI,CAACD,IAAI,EAAE;MACxC,CAAC,EACAiD,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,CAAC;IACJ,CAAC;IACDM,eAAeA,CAAA,EAAG;MAChBzD,KAAK,CAACsD,GAAG,CAAE,GAAEX,OAAO,CAACC,GAAG,CAACC,mBAAoB,aAAY,EACtDC,IAAI,CAACU,QAAO,IAAK;QAChB,IAAI,CAAC/C,UAAS,GAAI+C,QAAQ,CAACtD,IAAI;MACjC,CAAC,EACAgD,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;IACN,CAAC;IACDxB,UAAUA,CAAA,EAAG;MACX,MAAM4B,MAAK,GAAI;QACbjD,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BoD,UAAU,EAAE,IAAI,CAAClD,gBAAe,GAAI,IAAI,CAACA,gBAAgB,CAACc,EAAC,GAAI;MACjE,CAAC;MACDtB,KAAK,CAACsD,GAAG,CAAE,GAAEX,OAAO,CAACC,GAAG,CAACC,mBAAoB,QAAO,EAAE;QAAEU;MAAO,CAAC,EAC7DT,IAAI,CAACU,QAAO,IAAK;QAChB,IAAI,CAAC9C,KAAI,GAAI8C,QAAQ,CAACtD,IAAI;MAC5B,CAAC,EACAgD,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC;IACDQ,OAAOA,CAAA,EAAG;MACR,IAAI,CAAC,IAAI,CAAChD,WAAU,IAAK,CAAC,IAAI,CAACC,eAAe,EAAE;QAC9Ca,KAAK,CAAC,uBAAuB,CAAC;QAC9B;MACF;MACA,MAAMmC,OAAM,GAAI;QACd3D,IAAI,EAAE,IAAI,CAACU,WAAW;QACtB+C,UAAU,EAAE,IAAI,CAAC9C;MACnB,CAAC;MACDZ,KAAK,CAAC0C,IAAI,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,mBAAoB,QAAO,EAAEe,OAAO,EAC3Dd,IAAI,CAACU,QAAO,IAAK;QAChB/B,KAAK,CAAC,qBAAqB,CAAC;QAC5B,IAAI,CAACd,WAAU,GAAI,EAAE;QACrB,IAAI,CAACC,eAAc,GAAI,IAAI;QAC3B,IAAI,CAACe,UAAU,CAAC,CAAC,EAAE;MACrB,CAAC,EACAuB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACpC,CAAC,CAAC;IACN;EACF,CAAC;EACDU,OAAOA,CAAA,EAAG;IACR,IAAI,CAACR,aAAa,CAAC,CAAC,EAAE;IACtB,IAAI,CAACI,eAAe,CAAC,CAAC,EAAE;IACxB,IAAI,CAAC9B,UAAU,CAAC,CAAC,EAAE;;IAEnB;IACA,MAAMY,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;;IAE7C;IACA,IAAI,CAACF,MAAM,EAAE;MACXd,KAAK,CAAC,cAAc,CAAC;MACrB,IAAI,CAACuB,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;IACjC;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAACzD,KAAI,GAAI0D,WAAW,CAAC,IAAI,CAAC5B,WAAW,EAAE,IAAI,CAAC,EAAE;;IAElD;IACAN,MAAM,CAACmC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC9B,UAAU,CAAC;IACrDL,MAAM,CAACmC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC9B,UAAU,CAAC;EACrD,CAAC;EACD+B,aAAaA,CAAA,EAAG;IACd5B,aAAa,CAAC,IAAI,CAAChC,KAAK,CAAC,EAAE;IAC3BwB,MAAM,CAACqC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAChC,UAAU,CAAC;IACxDL,MAAM,CAACqC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAChC,UAAU,CAAC;EACxD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}